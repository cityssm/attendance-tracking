"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),(()=>{var e,t,s;const n=exports.Attend,a="is-update-button",o="is-up-button",l="is-down-button",r="is-delete-button";function c(e){e.currentTarget.closest("tr").classList.add("has-background-warning-light")}let i=exports.absenceTypes;function d(e){const t=e.currentTarget.closest("tr"),s=t.dataset.absenceTypeKey,a=t.querySelector("input").value;cityssm.postJSON(`${n.urlPrefix}/admin/doUpdateAbsenceType`,{absenceTypeKey:s,absenceType:a},e=>{e.success&&(bulmaJS.alert({message:"Absence type updated successfully."}),t.classList.remove("has-background-warning-light"))})}function u(e){const t=e.currentTarget,s=t.closest("tr").dataset.absenceTypeKey;cityssm.postJSON(`${n.urlPrefix}/admin/${"up"===t.dataset.direction?"doMoveAbsenceTypeUp":"doMoveAbsenceTypeDown"}`,{absenceTypeKey:s,moveToEnd:e.shiftKey?"1":"0"},e=>{const t=e;t.success?(i=t.absenceTypes,y()):bulmaJS.alert({title:"Error Moving Absence Type",message:"Please try again.",contextualColorName:"danger"})})}function p(e){const t=e.currentTarget.closest("tr").dataset.absenceTypeKey;bulmaJS.confirm({title:"Delete Absence Type",message:"Are you sure you want to delete this absence type?",contextualColorName:"warning",okButton:{text:"Yes, Delete Absence Type",callbackFunction:function(){cityssm.postJSON(`${n.urlPrefix}/admin/doDeleteAbsenceType`,{absenceTypeKey:t},e=>{const t=e;t.success?(i=t.absenceTypes,y()):bulmaJS.alert({title:"Error Deleting Absence Type",message:"Please try again.",contextualColorName:"danger"})})}}})}function y(){const e=document.querySelector("#container--absenceTypes");if(0===i.length)return void(e.innerHTML='<div class="message is-warning">\n        <p class="message-body">There are no active absence types.</p>\n        </div>');e.innerHTML='<table class="table is-striped is-hoverable is-fade-hoverable is-fullwidth">\n      <thead>\n        <tr>\n          <th>Absence Type</th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Update Absence Type</span>\n          </th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Move Absence Type</span>\n          </th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Delete Absence Type</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody></tbody>\n      </table>';const t=e.querySelector("tbody");for(const e of i){const s=document.createElement("tr");s.dataset.absenceTypeKey=e.absenceTypeKey,s.innerHTML=`<td>\n        <input class="input" name="absenceType" maxlength="100" aria-label="Absence Type" required />\n        </td>\n        <td>\n          <button class="button is-success ${a}" data-cy="save" type="button" aria-label="Update Absence Type">\n            <i class="fas fa-save" aria-hidden="true"></i>\n          </button>\n        </td>\n        <td>\n          <div class="field has-addons">\n            <div class="control">\n              <button class="button ${o}" data-direction="up" type="button" aria-label="Move Up">\n                <i class="fas fa-arrow-up" aria-hidden="true"></i>\n              </button>\n            </div>\n            <div class="control">\n              <button class="button ${l}" data-direction="down" type="button" aria-label="Move Down">\n                <i class="fas fa-arrow-down" aria-hidden="true"></i>\n              </button>\n            </div>\n          </div>\n        </td>\n        <td>\n        <button class="button is-danger ${r}" data-cy="delete" type="button" aria-label="Delete Absence Type">\n          <i class="fas fa-trash" aria-hidden="true"></i>\n        </button>\n        </td>`;const n=s.querySelector("input");n.value=e.absenceType,n.addEventListener("change",c),s.getElementsByClassName(a)[0].addEventListener("click",d),s.getElementsByClassName(o)[0].addEventListener("click",u),s.getElementsByClassName(l)[0].addEventListener("click",u),s.getElementsByClassName(r)[0].addEventListener("click",p),t.append(s)}}delete exports.absenceTypes,null===(e=document.querySelector("#tab--absenceTypes .is-add-button"))||void 0===e||e.addEventListener("click",()=>{let e;function t(t){t.preventDefault(),cityssm.postJSON(`${n.urlPrefix}/admin/doAddAbsenceType`,t.currentTarget,t=>{const s=t;s.success?(e(),bulmaJS.alert({message:"Absence type added successfully.",contextualColorName:"success"}),i=s.absenceTypes,y()):bulmaJS.alert({title:"Error Adding Absence Type",message:"Please try again.",contextualColorName:"danger"})})}cityssm.openHtmlModal("tableAdmin-addAbsenceType",{onshown(s,n){var a,o;bulmaJS.toggleHtmlClipped(),e=n,null===(a=s.querySelector("input"))||void 0===a||a.focus(),null===(o=s.querySelector("form"))||void 0===o||o.addEventListener("submit",t)},onremoved(){bulmaJS.toggleHtmlClipped()}})}),y();let b=exports.callOutResponseTypes;function m(e){const t=e.currentTarget.closest("tr"),s=t.dataset.responseTypeId,a=t.querySelector("input").value,o=t.querySelector("select").value;cityssm.postJSON(`${n.urlPrefix}/admin/doUpdateCallOutResponseType`,{responseTypeId:s,responseType:a,isSuccessful:o},e=>{e.success&&(bulmaJS.alert({message:"Response type updated successfully."}),t.classList.remove("has-background-warning-light"))})}function f(e){const t=e.currentTarget,s=t.closest("tr").dataset.responseTypeId;cityssm.postJSON(`${n.urlPrefix}/admin/${"up"===t.dataset.direction?"doMoveCallOutResponseTypeUp":"doMoveCallOutResponseTypeDown"}`,{responseTypeId:s,moveToEnd:e.shiftKey?"1":"0"},e=>{const t=e;t.success?(b=t.callOutResponseTypes,g()):bulmaJS.alert({title:"Error Moving Response Type",message:"Please try again.",contextualColorName:"danger"})})}function v(e){const t=e.currentTarget.closest("tr").dataset.responseTypeId;bulmaJS.confirm({title:"Delete Response Type",message:"Are you sure you want to delete this response type?",contextualColorName:"warning",okButton:{text:"Yes, Delete Response Type",callbackFunction:function(){cityssm.postJSON(`${n.urlPrefix}/admin/doDeleteCallOutResponseType`,{responseTypeId:t},e=>{const t=e;t.success?(b=t.callOutResponseTypes,g()):bulmaJS.alert({title:"Error Deleting Response Type",message:"Please try again.",contextualColorName:"danger"})})}}})}function g(){var e;const t=document.querySelector("#container--callOutResponseTypes");if(0===i.length)return void(t.innerHTML='<div class="message is-warning">\n        <p class="message-body">There are no active response types.</p>\n        </div>');t.innerHTML='<table class="table is-striped is-hoverable is-fade-hoverable is-fullwidth">\n      <thead>\n        <tr>\n          <th>Response Type</th>\n          <th>Is Successful</th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Update Response Type</span>\n          </th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Move Response Type</span>\n          </th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Delete Response Type</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody></tbody>\n      </table>';const s=t.querySelector("tbody");for(const t of b){const n=document.createElement("tr");n.dataset.responseTypeId=t.responseTypeId.toString(),n.innerHTML=`<td>\n        <input class="input" name="responseType" maxlength="100" aria-label="Call Out Response Type" required />\n        </td>\n        <td>\n          <div class="select is-fullwidth">\n            <select name="isSuccessful" aria-label="Is Successful" required>\n              <option value="1">Successful</option>\n              <option value="0">Unsuccessful</option>\n            </select>\n          </div>\n        </td>\n        <td>\n          <button class="button is-success ${a}" data-cy="save" type="button" aria-label="Update Response Type">\n            <i class="fas fa-save" aria-hidden="true"></i>\n          </button>\n        </td>\n        <td>\n          <div class="field has-addons">\n            <div class="control">\n              <button class="button ${o}" data-direction="up" type="button" aria-label="Move Up">\n                <i class="fas fa-arrow-up" aria-hidden="true"></i>\n              </button>\n            </div>\n            <div class="control">\n              <button class="button ${l}" data-direction="down" type="button" aria-label="Move Down">\n                <i class="fas fa-arrow-down" aria-hidden="true"></i>\n              </button>\n            </div>\n          </div>\n        </td>\n        <td>\n        <button class="button is-danger ${r}" data-cy="delete" type="button" aria-label="Delete Response Type">\n          <i class="fas fa-trash" aria-hidden="true"></i>\n        </button>\n        </td>`;const i=n.querySelector("input");i.value=t.responseType,i.addEventListener("change",c),null===(e=n.querySelector("select"))||void 0===e||e.addEventListener("change",c),t.isSuccessful||(n.querySelector("select").value="0"),n.getElementsByClassName(a)[0].addEventListener("click",m),n.getElementsByClassName(o)[0].addEventListener("click",f),n.getElementsByClassName(l)[0].addEventListener("click",f),n.getElementsByClassName(r)[0].addEventListener("click",v),s.append(n)}}delete exports.callOutResponseTypes,null===(t=document.querySelector("#tab--callOutResponseTypes .is-add-button"))||void 0===t||t.addEventListener("click",()=>{let e;function t(t){t.preventDefault(),cityssm.postJSON(`${n.urlPrefix}/admin/doAddCallOutResponseType`,t.currentTarget,t=>{const s=t;s.success?(e(),bulmaJS.alert({message:"Response type added successfully.",contextualColorName:"success"}),b=s.callOutResponseTypes,g()):bulmaJS.alert({title:"Error Adding Response Type",message:"Please try again.",contextualColorName:"danger"})})}cityssm.openHtmlModal("tableAdmin-addCallOutResponseType",{onshown(s,n){var a,o;bulmaJS.toggleHtmlClipped(),e=n,null===(a=s.querySelector("input"))||void 0===a||a.focus(),null===(o=s.querySelector("form"))||void 0===o||o.addEventListener("submit",t)},onremoved(){bulmaJS.toggleHtmlClipped()}})}),g();let h=exports.afterHoursReasons;function T(e){const t=e.currentTarget.closest("tr"),s=t.dataset.afterHoursReasonId,a=t.querySelector("input").value;cityssm.postJSON(`${n.urlPrefix}/admin/doUpdateAfterHoursReason`,{afterHoursReasonId:s,afterHoursReason:a},e=>{e.success&&(bulmaJS.alert({message:"Reason updated successfully."}),t.classList.remove("has-background-warning-light"))})}function S(e){const t=e.currentTarget,s=t.closest("tr").dataset.afterHoursReasonId;cityssm.postJSON(`${n.urlPrefix}/admin/${"up"===t.dataset.direction?"doMoveAfterHoursReasonUp":"doMoveAfterHoursReasonDown"}`,{afterHoursReasonId:s,moveToEnd:e.shiftKey?"1":"0"},e=>{const t=e;t.success?(h=t.afterHoursReasons,E()):bulmaJS.alert({title:"Error Moving Reason",message:"Please try again.",contextualColorName:"danger"})})}function R(e){const t=e.currentTarget.closest("tr").dataset.afterHoursReasonId;bulmaJS.confirm({title:"Delete Reason",message:"Are you sure you want to delete this after hours reason?",contextualColorName:"warning",okButton:{text:"Yes, Delete Reason",callbackFunction:function(){cityssm.postJSON(`${n.urlPrefix}/admin/doDeleteAfterHoursReason`,{afterHoursReasonId:t},e=>{const t=e;t.success?(h=t.afterHoursReasons,E()):bulmaJS.alert({title:"Error Deleting Reason",message:"Please try again.",contextualColorName:"danger"})})}}})}function E(){const e=document.querySelector("#container--afterHoursReasons");if(0===i.length)return void(e.innerHTML='<div class="message is-warning">\n        <p class="message-body">There are no active active hours reasons.</p>\n        </div>');e.innerHTML='<table class="table is-striped is-hoverable is-fade-hoverable is-fullwidth">\n      <thead>\n        <tr>\n          <th>Reason</th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Update Reason</span>\n          </th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Move Reason</span>\n          </th>\n          <th class="has-width-1">\n            <span class="is-sr-only">Delete Reason</span>\n          </th>\n        </tr>\n      </thead>\n      <tbody></tbody>\n      </table>';const t=e.querySelector("tbody");for(const e of h){const s=document.createElement("tr");s.dataset.afterHoursReasonId=e.afterHoursReasonId.toString(),s.innerHTML=`<td>\n        <input class="input" name="afterHoursReason" maxlength="100" aria-label="After Hours Reason" required />\n        </td>\n        <td>\n          <button class="button is-success ${a}" data-cy="save" type="button" aria-label="Update Reason">\n            <i class="fas fa-save" aria-hidden="true"></i>\n          </button>\n        </td>\n        <td>\n          <div class="field has-addons">\n            <div class="control">\n              <button class="button ${o}" data-direction="up" type="button" aria-label="Move Up">\n                <i class="fas fa-arrow-up" aria-hidden="true"></i>\n              </button>\n            </div>\n            <div class="control">\n              <button class="button ${l}" data-direction="down" type="button" aria-label="Move Down">\n                <i class="fas fa-arrow-down" aria-hidden="true"></i>\n              </button>\n            </div>\n          </div>\n        </td>\n        <td>\n        <button class="button is-danger ${r}" data-cy="delete" type="button" aria-label="Delete Reason">\n          <i class="fas fa-trash" aria-hidden="true"></i>\n        </button>\n        </td>`;const n=s.querySelector("input");n.value=e.afterHoursReason,n.addEventListener("change",c),s.getElementsByClassName(a)[0].addEventListener("click",T),s.getElementsByClassName(o)[0].addEventListener("click",S),s.getElementsByClassName(l)[0].addEventListener("click",S),s.getElementsByClassName(r)[0].addEventListener("click",R),t.append(s)}}delete exports.afterHoursReasons,null===(s=document.querySelector("#tab--afterHoursReasons .is-add-button"))||void 0===s||s.addEventListener("click",()=>{let e;function t(t){t.preventDefault(),cityssm.postJSON(`${n.urlPrefix}/admin/doAddAfterHoursReason`,t.currentTarget,t=>{const s=t;s.success?(e(),bulmaJS.alert({message:"Reason added successfully.",contextualColorName:"success"}),h=s.afterHoursReasons,E()):bulmaJS.alert({title:"Error Adding Reason",message:"Please try again.",contextualColorName:"danger"})})}cityssm.openHtmlModal("tableAdmin-addAfterHoursReason",{onshown(s,n){var a,o;bulmaJS.toggleHtmlClipped(),e=n,null===(a=s.querySelector("input"))||void 0===a||a.focus(),null===(o=s.querySelector("form"))||void 0===o||o.addEventListener("submit",t)},onremoved(){bulmaJS.toggleHtmlClipped()}})}),E()})();